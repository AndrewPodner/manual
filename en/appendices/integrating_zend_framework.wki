# Integrating Zend Framework

To use the Zend Framework inside of your Lithium application the first thing you need to do is add some configuration to `app/config/bootstrap.php`.

## Configuration

This will first add a checkout from the trunk, than the incubator.  Note that `'path'` can be dropped if `trunk/library/Zend` is placed directly into your /libraries directory.

{{{
Libraries::add("Zend", array(
	"prefix" => "Zend_",
	'path' => '/htdocs/libraries/Zend/trunk/library/Zend',
	"includePath" => '/htdocs/libraries/Zend/trunk/library',
	"bootstrap" => "Loader/Autoloader.php",
	"loader" => array("Zend_Loader_Autoloader", "autoload"),
	"transform" => function($class) { return str_replace("_", "/", $class) . ".php"; }
));

Libraries::add("Zend_Incubator", array(
	"prefix" => "Zend_",
	"includePath" => '/htdocs/libraries/Zend/incubator/library',
	"transform" => function($class) { return str_replace("_", "/", $class) . ".php"; }
));
}}}

## Usage

Now that you added the configuration you can access any Zend Framework class by add the all important statement...

`use \Zend_Mail_Storage_Pop3 `

{{{
namespace app\controllers;

use Zend_Mail_Storage_Pop3;

class EmailController extends \lithium\action\Controller {

	public function index() {
		$mail = new Zend_Mail_Storage_Pop3(array(
			'host' => 'localhost', 'user' => 'test', 'password' => 'test'
		));
		return compact('mail');
	}
	
}
}}}

Please refer to [the mail documentation provided by Zend Framework](http://framework.zend.com/manual/en/zend.mail.read.html) for using the Zend_Mail classes.
